<?xml version="1.0"?>
<doc>
    <assembly>
        <name>CodeGeneration.Roslyn</name>
    </assembly>
    <members>
        <member name="T:CodeGeneration.Roslyn.ICodeGenerator">
            <summary>
            Describes a code generator that responds to attributes on members to generate code.
            </summary>
        </member>
        <member name="M:CodeGeneration.Roslyn.ICodeGenerator.GenerateAsync(CodeGeneration.Roslyn.TransformationContext,System.IProgress{Microsoft.CodeAnalysis.Diagnostic},System.Threading.CancellationToken)">
            <summary>
            Create the syntax tree representing the expansion of some member to which this attribute is applied.
            </summary>
            <param name="context">All the inputs necessary to perform the code generation.</param>
            <param name="progress">A way to report diagnostic messages.</param>
            <param name="cancellationToken">A cancellation token.</param>
            <returns>The generated member syntax to be added to the project.</returns>
        </member>
        <member name="T:CodeGeneration.Roslyn.IRichCodeGenerator">
            <summary>
            Describes a code generator that responds to attributes on members to generate code,
            and returns compilation unit members.
            </summary>
        </member>
        <member name="M:CodeGeneration.Roslyn.IRichCodeGenerator.GenerateRichAsync(CodeGeneration.Roslyn.TransformationContext,System.IProgress{Microsoft.CodeAnalysis.Diagnostic},System.Threading.CancellationToken)">
            <summary>
            Create additions to compilation unit representing the expansion of some node to which this attribute is applied.
            </summary>
            <param name="context">All the inputs necessary to perform the code generation.</param>
            <param name="progress">A way to report diagnostic messages.</param>
            <param name="cancellationToken">A cancellation token.</param>
            <returns>The generated syntax nodes to be added to the compilation unit added to the project.</returns>
        </member>
        <member name="T:CodeGeneration.Roslyn.LogLevel">
            <summary>
            Defines level and behavior expected on given message.
            </summary>
        </member>
        <member name="F:CodeGeneration.Roslyn.LogLevel.Info">
            <summary>
            Informational content, logged in verbose outputs.
            </summary>
        </member>
        <member name="F:CodeGeneration.Roslyn.LogLevel.Warning">
            <summary>
            Warning, impacting build in non-fatal way. May stop build pipeline (when treating warnings as errors).
            </summary>
        </member>
        <member name="F:CodeGeneration.Roslyn.LogLevel.Error">
            <summary>
            Unrecoverable error, stops build pipeline.
            </summary>
        </member>
        <member name="T:CodeGeneration.Roslyn.Logger">
            <summary>
            Logs messages in MSBuild-recognized format to standard output.
            </summary>
        </member>
        <member name="M:CodeGeneration.Roslyn.Logger.Error(System.String,System.String)">
            <summary>
            Log message to build output with <see cref="F:CodeGeneration.Roslyn.LogLevel.Error"/>. Will fail build.
            </summary>
            <param name="message">Message to log.</param>
            <param name="diagnosticCode">Diagnostic code to prepend message with.</param>
        </member>
        <member name="M:CodeGeneration.Roslyn.Logger.Warning(System.String,System.String)">
            <summary>
            Log message to build output with <see cref="F:CodeGeneration.Roslyn.LogLevel.Warning"/>. May fail build.
            </summary>
            <param name="message">Message to log.</param>
            <param name="diagnosticCode">Diagnostic code to prepend message with.</param>
        </member>
        <member name="M:CodeGeneration.Roslyn.Logger.Info(System.String)">
            <summary>
            Log message to build output with <see cref="F:CodeGeneration.Roslyn.LogLevel.Info"/>.
            </summary>
            <param name="message">Message to log.</param>
        </member>
        <member name="M:CodeGeneration.Roslyn.Logger.Log(CodeGeneration.Roslyn.LogLevel,System.String,System.String)">
            <summary>
            Log message to build output.
            </summary>
            <param name="logLevel">Level with which it'll be logged, may impact build result.</param>
            <param name="message">Message to log.</param>
            <param name="diagnosticCode">Diagnostic code to prepend message with.</param>
        </member>
        <member name="T:CodeGeneration.Roslyn.RichGenerationResult">
            <summary>
            Contains <see cref="T:Microsoft.CodeAnalysis.CSharp.Syntax.CompilationUnitSyntax"/> additions generated by the <see cref="T:CodeGeneration.Roslyn.IRichCodeGenerator"/>.
            </summary>
        </member>
        <member name="P:CodeGeneration.Roslyn.RichGenerationResult.Members">
            <summary>
            Gets or sets the <see cref="T:Microsoft.CodeAnalysis.CSharp.Syntax.MemberDeclarationSyntax"/> to add to generated <see cref="T:Microsoft.CodeAnalysis.CSharp.Syntax.CompilationUnitSyntax"/>.
            </summary>
        </member>
        <member name="P:CodeGeneration.Roslyn.RichGenerationResult.Usings">
            <summary>
            Gets or sets the <see cref="T:Microsoft.CodeAnalysis.CSharp.Syntax.UsingDirectiveSyntax"/> to add to generated <see cref="T:Microsoft.CodeAnalysis.CSharp.Syntax.CompilationUnitSyntax"/>.
            </summary>
        </member>
        <member name="P:CodeGeneration.Roslyn.RichGenerationResult.Externs">
            <summary>
            Gets or sets the <see cref="T:Microsoft.CodeAnalysis.CSharp.Syntax.ExternAliasDirectiveSyntax"/> to add to generated <see cref="T:Microsoft.CodeAnalysis.CSharp.Syntax.CompilationUnitSyntax"/>.
            </summary>
        </member>
        <member name="P:CodeGeneration.Roslyn.RichGenerationResult.AttributeLists">
            <summary>
            Gets or sets the <see cref="T:Microsoft.CodeAnalysis.CSharp.Syntax.AttributeListSyntax"/> to add to generated <see cref="T:Microsoft.CodeAnalysis.CSharp.Syntax.CompilationUnitSyntax"/>.
            </summary>
        </member>
        <member name="T:CodeGeneration.Roslyn.TransformationContext">
            <summary>
            Provides all the inputs and context necessary to perform the code generation.
            </summary>
        </member>
        <member name="M:CodeGeneration.Roslyn.TransformationContext.#ctor(Microsoft.CodeAnalysis.CSharp.CSharpSyntaxNode,Microsoft.CodeAnalysis.SemanticModel,Microsoft.CodeAnalysis.CSharp.CSharpCompilation,System.String,System.Collections.Generic.IEnumerable{Microsoft.CodeAnalysis.CSharp.Syntax.UsingDirectiveSyntax},System.Collections.Generic.IEnumerable{Microsoft.CodeAnalysis.CSharp.Syntax.ExternAliasDirectiveSyntax})">
            <summary>
            Initializes a new instance of the <see cref="T:CodeGeneration.Roslyn.TransformationContext" /> class.
            </summary>
            <param name="processingNode">The syntax node the generator attribute is found on.</param>
            <param name="semanticModel">The semantic model.</param>
            <param name="compilation">The overall compilation being generated for.</param>
            <param name="projectDirectory">The absolute path of the directory where the project file is located.</param>
            <param name="compilationUnitUsings">The using directives already queued to be generated.</param>
            <param name="compilationUnitExterns">The extern aliases already queued to be generated.</param>
        </member>
        <member name="P:CodeGeneration.Roslyn.TransformationContext.ProcessingNode">
            <summary>Gets the syntax node the generator attribute is found on.</summary>
        </member>
        <member name="P:CodeGeneration.Roslyn.TransformationContext.SemanticModel">
            <summary>Gets the semantic model for the <see cref="P:CodeGeneration.Roslyn.TransformationContext.Compilation" />.</summary>
        </member>
        <member name="P:CodeGeneration.Roslyn.TransformationContext.Compilation">
            <summary>Gets the overall compilation being generated for.</summary>
        </member>
        <member name="P:CodeGeneration.Roslyn.TransformationContext.ProjectDirectory">
            <summary>Gets the absolute path of the directory where the project file is located.</summary>
        </member>
        <member name="P:CodeGeneration.Roslyn.TransformationContext.CompilationUnitUsings">
            <summary>Gets a collection of using directives already queued to be generated.</summary>
        </member>
        <member name="P:CodeGeneration.Roslyn.TransformationContext.CompilationUnitExterns">
            <summary>Gets a collection of extern aliases already queued to be generated.</summary>
        </member>
    </members>
</doc>
